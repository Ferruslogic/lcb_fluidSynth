
library com.ferruslogic.library.fluidsynth

use com.livecode.foreign
use com.livecode.engine



__safe foreign handler new_fluid_settings() \
	returns Pointer binds to "libfluidsynth>new_fluid_settings" 

__safe foreign handler new_fluid_synth(in pSettings as Pointer) \
	returns optional Pointer binds to "libfluidsynth>new_fluid_synth" 

__safe foreign handler new_fluid_audio_driver(in pSettings as Pointer,in pSynth as Pointer )\
	 returns optional Pointer binds to "libfluidsynth>new_fluid_audio_driver" 

__safe foreign handler delete_fluid_audio_driver(in pDriver as Pointer ) \ 
	returns nothing binds to "libfluidsynth>delete_fluid_audio_driver" 


__safe foreign handler fluid_synth_sfload(in pSynth as Pointer,in pFilename as ZStringNative,in pResetPresets as CInt )\
	 returns CInt binds to "libfluidsynth>fluid_synth_sfload" 

__safe foreign handler fluid_synth_noteon(in pSynth as Pointer,in pChan as CInt,in pKey as CInt, in pVel as CInt )\
	 returns CInt binds to "libfluidsynth>fluid_synth_noteon" 

 __safe foreign handler fluid_synth_noteoff(in pSynth as Pointer,in pChan as CInt,in pKey as CInt )\
	 returns CInt binds to "libfluidsynth>fluid_synth_noteoff" 
	 
__safe foreign handler fluid_synth_sfcount(in pSynth as Pointer )\
	 returns CInt binds to "libfluidsynth>fluid_synth_sfcount" 
	 





private variable mInited as Boolean
private variable mSettings as optional Pointer
private variable mSynth as optional Pointer
private variable mAudioDriver as optional Pointer

public handler fsEnsureInitialize()
	if mInited then
		return
	end if

	variable tFilename as ZStringNative
    put  new_fluid_settings() into mSettings
	put new_fluid_synth(mSettings) into mSynth
	--log mSynth

	put "C:/tmp/lcb-fluid-TEST/sf2/example.sf2" into tFilename
	--put "/sf2/example.sf2" into tFilename

	
	// fluid_synth_sfcount(mSynth)

	fluid_synth_sfload(mSynth,tFilename,1) 

	

	put new_fluid_audio_driver(mSettings,mSynth) into mAudioDriver
--	delete_fluid_audio_driver(mAudioDriver)
	 
	put true into mInited
end handler




public handler fsNoteOn(in pChanel as Integer, in pKey as Integer, in pVel as Integer)
	fsEnsureInitialize()
	fluid_synth_noteon(mSynth,pChanel,pKey,pVel)
end handler


public handler fsNoteOff(in pChanel as Integer, in pKey as Integer)
	fsEnsureInitialize()
	fluid_synth_noteoff(mSynth,pChanel,pKey)
end handler


public handler fsStopDriver()
	delete_fluid_audio_driver(mAudioDriver)
	put nothing into mAudioDriver
	put false into mInited
end handler





end library
